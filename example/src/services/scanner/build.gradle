plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

group = 'com.example'
version = '1.0'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.5.18'
    implementation 'org.apache.pdfbox:pdfbox:3.0.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation 'org.mockito:mockito-core:5.20.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.20.0'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.awaitility:awaitility:4.3.0'
    implementation project(':src:services:shared')
}

application {
    mainClass = 'com.example.scanner.Main'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Implementation-Title': 'Document Scanner',
                'Implementation-Version': version,
                'Main-Class': application.mainClass.get()
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks {
    test {
        useJUnitPlatform()
        ignoreFailures = true
        finalizedBy jacocoTestReport
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false

    }
}
